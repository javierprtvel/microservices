server:
  port: ${PORT:0}

spring:
  config:
    import: 'optional:configserver:http://localhost:8012'
  cloud:
    config:
      enabled: true
      uri: http://localhost:8012
      retry:
        max-interval: 3000
        maxAttempts: 6
    bus:
      enabled: true
  application:
    name: albums-ws
  couchbase:
    connection-string: couchbase://localhost
    user-name: photoapp_dbuser
    password: # override it for production
    bucket-name: albums
    auto-index-creation: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: # override it for production
  zipkin:
    enabled: false
    base-url: http://localhost:9411
    sender.type: web # rabbitmq, kafka
  sleuth:
    enabled: true
    sampler.probability: 0.1
  devtools:
    restart.enabled: false

logging:
  file:
    name: albums-ws.log
  level:
    root: INFO
    '[me.learning.microservices.photoapp.api.albums.data.UsersServiceClient]': INFO

management:
  trace:
    http:
      enabled: true
  endpoints:
    web:
      exposure.include: mappings,routes,beans

eureka:
  instance:
    hostname: # override it or set at startup
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

gateway:
  ip: # set at startup by environment or config server

authorization:
  token:
    secret: # set at startup by environment or config server
    expiration-time: 86400000

